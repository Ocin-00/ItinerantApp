package com.itinerant.entity;
// Generated 5 jul 2022 14:47:27 by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Ciudadano generated by hbm2java
 */
@Entity
@NamedQueries({
	 @NamedQuery(name = "Ciudadano.findAll", query = "SELECT u FROM Ciudadano c ORDER BY c.apellidos"),
	 @NamedQuery(name = "Ciudadano.countAll", query = "SELECT count(*) FROM Ciudadano c"),
})
@Table(name = "ciudadano", catalog = "itinerant_db")
public class Ciudadano extends UsuarioInterno implements java.io.Serializable {

	private String localizacion;
	private int diasSancion;
	private String sexo;
	private String estadoCivil;
	private String formacion;
	private String telefono;
	private Set<Cita> citas = new HashSet<Cita>(0);

	public Ciudadano() {
	}

	public Ciudadano(String login, String password, String email, String nombre, 
			String apellidos, Date fechaNac, String localizacion, int diasSancion) {
		super(login, password, email, nombre, apellidos, fechaNac);
		this.localizacion = localizacion;
		this.diasSancion = diasSancion;
	}

	public Ciudadano(String login, String password, String email, String nombre, 
			String apellidos, Date fechaNac,String localizacion, int diasSancion, String sexo,
			String estadoCivil, String formacion, String telefono,byte[] fotoPerfil, Set<Cita> citas,
			Set<Chat> chatsForUsuarioFuente, Set<Alerta> alertas, Set<Chat> chatsForUsuarioDestino) {
		super(login, password, email, nombre, apellidos, fechaNac,fotoPerfil, chatsForUsuarioFuente, alertas, 
				chatsForUsuarioDestino);
		this.localizacion = localizacion;
		this.diasSancion = diasSancion;
		this.sexo = sexo;
		this.estadoCivil = estadoCivil;
		this.formacion = formacion;
		this.telefono = telefono;
		this.citas = citas;
	}

	@Column(name = "localizacion", nullable = false, length = 100)
	public String getLocalizacion() {
		return this.localizacion;
	}

	public void setLocalizacion(String localizacion) {
		this.localizacion = localizacion;
	}

	@Column(name = "dias_sancion", nullable = false)
	public int getDiasSancion() {
		return this.diasSancion;
	}

	public void setDiasSancion(int diasSancion) {
		this.diasSancion = diasSancion;
	}

	@Column(name = "sexo", length = 20)
	public String getSexo() {
		return this.sexo;
	}

	public void setSexo(String sexo) {
		this.sexo = sexo;
	}

	@Column(name = "estado_civil", length = 50)
	public String getEstadoCivil() {
		return this.estadoCivil;
	}

	public void setEstadoCivil(String estadoCivil) {
		this.estadoCivil = estadoCivil;
	}

	@Column(name = "formacion", length = 200)
	public String getFormacion() {
		return this.formacion;
	}

	public void setFormacion(String formacion) {
		this.formacion = formacion;
	}

	@Column(name = "telefono", length = 10)
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ciudadano")
	public Set<Cita> getCitas() {
		return this.citas;
	}

	public void setCitas(Set<Cita> citas) {
		this.citas = citas;
	}

}
