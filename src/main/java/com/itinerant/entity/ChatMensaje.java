package com.itinerant.entity;
// Generated 22 dic 2022 13:04:01 by Hibernate Tools 4.3.6.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.itinerant.enums.MessageStatus;

/**
 * ChatMensaje generated by hbm2java
 */
@Entity
@NamedQueries({
	 @NamedQuery(name = "ChatMensaje.findAllByChatId", query = "SELECT m FROM ChatMensaje m WHERE m.chat.idChat = :idChat")
})
@Table(name = "chat_mensaje", catalog = "itinerant_db")
public class ChatMensaje implements java.io.Serializable {

	private Integer idMensaje;
	private Chat chat;
	private UsuarioInterno usuarioInternoByIdRecipient;
	private UsuarioInterno usuarioInternoByIdSender;
	private String cuerpo;
	private MessageStatus status;
	private Date hora;

	public ChatMensaje() {
	}

	public ChatMensaje(Chat chat, UsuarioInterno usuarioInternoByIdRecipient, UsuarioInterno usuarioInternoByIdSender,
			String cuerpo) {
		this.chat = chat;
		this.usuarioInternoByIdRecipient = usuarioInternoByIdRecipient;
		this.usuarioInternoByIdSender = usuarioInternoByIdSender;
		this.cuerpo = cuerpo;
		this.hora = new Date();
		this.status = MessageStatus.SENT;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_mensaje", unique = true, nullable = false)
	public Integer getIdMensaje() {
		return this.idMensaje;
	}

	public void setIdMensaje(Integer idMensaje) {
		this.idMensaje = idMensaje;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_chat", nullable = false)
	public Chat getChat() {
		return this.chat;
	}

	public void setChat(Chat chat) {
		this.chat = chat;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_recipient", nullable = false)
	public UsuarioInterno getUsuarioInternoByIdRecipient() {
		return this.usuarioInternoByIdRecipient;
	}

	public void setUsuarioInternoByIdRecipient(UsuarioInterno usuarioInternoByIdRecipient) {
		this.usuarioInternoByIdRecipient = usuarioInternoByIdRecipient;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_sender", nullable = false)
	public UsuarioInterno getUsuarioInternoByIdSender() {
		return this.usuarioInternoByIdSender;
	}

	public void setUsuarioInternoByIdSender(UsuarioInterno usuarioInternoByIdSender) {
		this.usuarioInternoByIdSender = usuarioInternoByIdSender;
	}

	@Column(name = "cuerpo", nullable = false, length = 45)
	public String getCuerpo() {
		return this.cuerpo;
	}

	public void setCuerpo(String cuerpo) {
		this.cuerpo = cuerpo;
	}

	@Column(name = "status", nullable = true, length = 45)
	public MessageStatus getStatus() {
		return this.status;
	}

	public void setStatus(MessageStatus status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "hora", nullable = false, length = 19)
	public Date getHora() {
		return this.hora;
	}

	public void setHora(Date hora) {
		this.hora = hora;
	}

}
