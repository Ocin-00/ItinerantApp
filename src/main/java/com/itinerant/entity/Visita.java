package com.itinerant.entity;
// Generated 28 jul 2022 13:44:30 by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Visita generated by hbm2java
 */
@Entity
@Table(name = "visita", catalog = "itinerant_db")
public class Visita implements java.io.Serializable {

	private VisitaId id;
	private Localidad localidad;
	private Profesional profesional;
	private Date horaInicio;
	private Date horaFin;
	private String descripcion;
	private int duracionCitas;
	private double duracionDesplazamiento;
	private double precio;
	private byte[] imagen;
	private String nombre;
	private Set<Categoria> categorias = new HashSet<Categoria>(0);
	private Set<Cita> citas = new HashSet<Cita>(0);

	public Visita() {
	}

	public Visita(VisitaId id, Localidad localidad, Profesional profesional, Date horaInicio, Date horaFin,
			String descripcion, int duracionCitas, double duracionDesplazamiento, double precio, String nombre) {
		this.id = id;
		this.localidad = localidad;
		this.profesional = profesional;
		this.horaInicio = horaInicio;
		this.horaFin = horaFin;
		this.descripcion = descripcion;
		this.duracionCitas = duracionCitas;
		this.duracionDesplazamiento = duracionDesplazamiento;
		this.precio = precio;
		this.nombre = nombre;
	}

	public Visita(VisitaId id, Localidad localidad, Profesional profesional, Date horaInicio, Date horaFin,
			String descripcion, int duracionCitas, double duracionDesplazamiento, double precio, byte[] imagen,
			String nombre, Set<Categoria> categorias, Set<Cita> citas) {
		this.id = id;
		this.localidad = localidad;
		this.profesional = profesional;
		this.horaInicio = horaInicio;
		this.horaFin = horaFin;
		this.descripcion = descripcion;
		this.duracionCitas = duracionCitas;
		this.duracionDesplazamiento = duracionDesplazamiento;
		this.precio = precio;
		this.imagen = imagen;
		this.nombre = nombre;
		this.categorias = categorias;
		this.citas = citas;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idProfesional", column = @Column(name = "id_profesional", nullable = false, length = 30)),
			@AttributeOverride(name = "idLocalidad", column = @Column(name = "id_localidad", nullable = false)),
			@AttributeOverride(name = "fecha", column = @Column(name = "fecha", nullable = false, length = 10)) })
	public VisitaId getId() {
		return this.id;
	}

	public void setId(VisitaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_localidad", nullable = false, insertable = false, updatable = false)
	public Localidad getLocalidad() {
		return this.localidad;
	}

	public void setLocalidad(Localidad localidad) {
		this.localidad = localidad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_profesional", nullable = false, insertable = false, updatable = false)
	public Profesional getProfesional() {
		return this.profesional;
	}

	public void setProfesional(Profesional profesional) {
		this.profesional = profesional;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "hora_inicio", nullable = false, length = 19)
	public Date getHoraInicio() {
		return this.horaInicio;
	}

	public void setHoraInicio(Date horaInicio) {
		this.horaInicio = horaInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "hora_fin", nullable = false, length = 19)
	public Date getHoraFin() {
		return this.horaFin;
	}

	public void setHoraFin(Date horaFin) {
		this.horaFin = horaFin;
	}

	@Column(name = "descripcion", nullable = false, length = 200)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "duracion_citas", nullable = false)
	public int getDuracionCitas() {
		return this.duracionCitas;
	}

	public void setDuracionCitas(int duracionCitas) {
		this.duracionCitas = duracionCitas;
	}

	@Column(name = "duracion_desplazamiento", nullable = false, precision = 22, scale = 0)
	public double getDuracionDesplazamiento() {
		return this.duracionDesplazamiento;
	}

	public void setDuracionDesplazamiento(double duracionDesplazamiento) {
		this.duracionDesplazamiento = duracionDesplazamiento;
	}

	@Column(name = "precio", nullable = false, precision = 22, scale = 0)
	public double getPrecio() {
		return this.precio;
	}

	public void setPrecio(double precio) {
		this.precio = precio;
	}

	@Column(name = "imagen")
	public byte[] getImagen() {
		return this.imagen;
	}

	public void setImagen(byte[] imagen) {
		this.imagen = imagen;
	}

	@Column(name = "nombre", nullable = false, length = 50)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "visita_categoria", catalog = "itinerant_db", joinColumns = {
			@JoinColumn(name = "id_profesional", nullable = false, updatable = false),
			@JoinColumn(name = "id_localidad", nullable = false, updatable = false),
			@JoinColumn(name = "fecha", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_categoria", nullable = false, updatable = false) })
	public Set<Categoria> getCategorias() {
		return this.categorias;
	}

	public void setCategorias(Set<Categoria> categorias) {
		this.categorias = categorias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "visita")
	public Set<Cita> getCitas() {
		return this.citas;
	}

	public void setCitas(Set<Cita> citas) {
		this.citas = citas;
	}

}
