package com.itinerant.entity;
// Generated 5 jul 2022 14:47:27 by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.itinerant.service.UsuarioInternoServicios;

/**
 * UsuarioInterno generated by hbm2java
 */
@Entity
@NamedQueries({
	 @NamedQuery(name = "UsuarioInterno.findAll", query = "SELECT u FROM UsuarioInterno u ORDER BY u.apellidos"),
	 @NamedQuery(name = "UsuarioInterno.findByEmail", query = "SELECT u FROM UsuarioInterno u WHERE u.email = :email"),
	 @NamedQuery(name = "UsuarioInterno.countAll", query = "SELECT count(*) FROM UsuarioInterno u"),
	 @NamedQuery(name = "UsuarioInterno.checkLogin", query = "SELECT u FROM UsuarioInterno u WHERE u.login = :login AND u.password = :password")
})
@Inheritance(
	    strategy = InheritanceType.JOINED
)
@Table(name = "usuario_interno", catalog = "itinerant_db", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
public class UsuarioInterno implements java.io.Serializable {

	protected String login;
	protected String password;
	protected String email;
	protected String nombre;
	protected String apellidos;
	protected String rol;
	protected Date fechaNac;
	protected String imagenRuta;
	private Set<ChatMensaje> chatMensajesForIdRecipient = new HashSet<ChatMensaje>(0);
	private Set<Alerta> alertas = new HashSet<Alerta>(0);
	private Set<Chat> chatsForIdRecipient = new HashSet<Chat>(0);
	private Set<Chat> chatsForIdSender = new HashSet<Chat>(0);
	private Set<ChatMensaje> chatMensajesForIdSender = new HashSet<ChatMensaje>(0);


	public UsuarioInterno() {
	}

	public UsuarioInterno(String login, String password, String email, String nombre, String apellidos, String rol, Date fechaNac) {
		this.login = login;
		this.password = password;
		this.email = email;
		this.nombre = nombre;
		this.apellidos = apellidos;
		this.rol = rol;
		this.fechaNac = fechaNac;
		this.imagenRuta = "../img/default.jpg";
	}

	public UsuarioInterno(String login, String password, String email, String nombre, String apellidos, String rol,
						  Date fechaNac, String imagenRuta,Set<ChatMensaje> chatMensajesForIdRecipient, Set<Alerta> alertas,
						  Set<Chat> chatsForIdRecipient, Set<Chat> chatsForIdSender, Set<ChatMensaje> chatMensajesForIdSender) {
		this.login = login;
		this.password = password;
		this.email = email;
		this.nombre = nombre;
		this.apellidos = apellidos;
		this.fechaNac = fechaNac;
		this.rol = rol;
		this.imagenRuta = imagenRuta;
		this.alertas = alertas;
		this.chatsForIdRecipient = chatsForIdRecipient;
		this.chatsForIdSender = chatsForIdSender;
		this.chatMensajesForIdSender = chatMensajesForIdSender;
	}

	@Id
	@Column(name = "login", unique = true, nullable = false, length = 30)
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@Column(name = "password", nullable = false, length = 64)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "email", unique = true, nullable = false, length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "nombre", nullable = false, length = 50)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "apellidos", nullable = false, length = 100)
	public String getApellidos() {
		return this.apellidos;
	}

	public void setApellidos(String apellidos) {
		this.apellidos = apellidos;
	}

	@Column(name = "rol", nullable = false, length = 50)
	public String getRol() {
		return this.rol;
	}

	public void setRol(String rol) {
		this.rol = rol;
	}
	
	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_nac", nullable = false, length = 10)
	public Date getFechaNac() {
		return this.fechaNac;
	}

	public void setFechaNac(Date fechaNac) {
		this.fechaNac = fechaNac;
	}

	@Column(name = "imagen_ruta", nullable = false, length = 200)
	public String getImagenRuta() {
		return this.imagenRuta;
	}

	public void setImagenRuta(String imagenRuta) {
		this.imagenRuta = imagenRuta;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioInternoByIdRecipient")
	public Set<ChatMensaje> getChatMensajesForIdRecipient() {
		return this.chatMensajesForIdRecipient;
	}

	public void setChatMensajesForIdRecipient(Set<ChatMensaje> chatMensajesForIdRecipient) {
		this.chatMensajesForIdRecipient = chatMensajesForIdRecipient;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioInterno")
	public Set<Alerta> getAlertas() {
		return this.alertas;
	}

	public void setAlertas(Set<Alerta> alertas) {
		this.alertas = alertas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioInternoByIdRecipient")
	public Set<Chat> getChatsForIdRecipient() {
		return this.chatsForIdRecipient;
	}

	public void setChatsForIdRecipient(Set<Chat> chatsForIdRecipient) {
		this.chatsForIdRecipient = chatsForIdRecipient;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioInternoByIdSender")
	public Set<Chat> getChatsForIdSender() {
		return this.chatsForIdSender;
	}

	public void setChatsForIdSender(Set<Chat> chatsForIdSender) {
		this.chatsForIdSender = chatsForIdSender;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioInternoByIdSender")
	public Set<ChatMensaje> getChatMensajesForIdSender() {
		return this.chatMensajesForIdSender;
	}

	public void setChatMensajesForIdSender(Set<ChatMensaje> chatMensajesForIdSender) {
		this.chatMensajesForIdSender = chatMensajesForIdSender;
	}
	
	public String toString() {
		return this.nombre + " " + this.apellidos;
	}

}
