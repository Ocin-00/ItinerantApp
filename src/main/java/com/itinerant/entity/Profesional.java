package com.itinerant.entity;
// Generated 5 jul 2022 14:47:27 by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.itinerant.enums.Rol;


/**
 * Profesional generated by hbm2java
 */
@Entity
@NamedQueries({
	 @NamedQuery(name = "Profesional.findAll", query = "SELECT p FROM Profesional p ORDER BY p.apellidos"),
	 @NamedQuery(name = "Profesional.findAllNotValid", query = "SELECT p FROM Profesional p WHERE p.validez is not true ORDER BY p.fechaRegistro"),
	 @NamedQuery(name = "Profesional.findAllValid", query = "SELECT p FROM Profesional p WHERE p.validez is true"),
	 @NamedQuery(name = "Profesional.findByEmail", query = "SELECT p FROM Profesional p WHERE p.email = :email"),
	 @NamedQuery(name = "Profesional.countAll", query = "SELECT count(*) FROM Profesional p"),
	 @NamedQuery(name = "Profesional.checkLogin", query = "SELECT p FROM Profesional p WHERE p.login = :login AND p.password = :password"),
	 @NamedQuery(name = "Profesional.search", query = "SELECT p FROM Profesional p WHERE (p.nombre LIKE '%' || :keyword || '%'"
													+ "OR p.apellidos LIKE '%' || :keyword || '%')"
													+ "AND p.validez is true ORDER BY p.apellidos"),
})
@Table(name = "profesional", catalog = "itinerant_db")
public class Profesional extends UsuarioInterno {

	private String localizacion;
	private Localidad localidad;
	private String formacion;
	private String telefono;
	private String sexo;
	private String estadoCivil;
	private String descripcion;
	private boolean validez;
	private Date fechaRegistro;
	private Set<Visita> visitas = new HashSet<Visita>(0);
	private Set<Certificado> certificados = new HashSet<Certificado>(0);
	private Set<Serie> series = new HashSet<Serie>(0);

	public Profesional() {
	}

	public Profesional(String login, String password, String email, String nombre, String apellidos, Date fechaNac,
			String localizacion, String formacion, String telefono, boolean validez, Date fechaRegistro, Localidad localidad) {
		super(login, password, email, nombre, apellidos, Rol.PROFESIONAL.toString(), fechaNac);
		this.localizacion = localizacion;
		this.formacion = formacion;
		this.telefono = telefono;
		this.validez = validez;
		this.fechaRegistro = fechaRegistro;
		this.localidad = localidad;
	}

	public Profesional(String login, String password, String email, String nombre, String apellidos, Date fechaNac,
			String localizacion, String formacion, String telefono, String sexo, String estadoCivil, String descripcion,
			boolean validez, Date fechaRegistro, Localidad localidad, String imagenRuta, Set<Visita> visitas, Set<Certificado> certificados,
			Set<ChatMensaje> chatMensajesForIdRecipient, Set<Alerta> alertas, Set<Chat> chatsForIdRecipient, Set<Chat> chatsForIdSender, 
			Set<ChatMensaje> chatMensajesForIdSender, Set<Serie> series) {
		super(login, password, email, nombre, apellidos, Rol.PROFESIONAL.toString(), fechaNac, imagenRuta, chatMensajesForIdRecipient, alertas, 
				chatsForIdRecipient, chatsForIdSender, chatMensajesForIdSender);
		this.localizacion = localizacion;
		this.formacion = formacion;
		this.telefono = telefono;
		this.sexo = sexo;
		this.estadoCivil = estadoCivil;
		this.descripcion = descripcion;
		this.validez = validez;
		this.fechaRegistro = fechaRegistro;
		this.visitas = visitas;
		this.certificados = certificados;
		this.series = series;
		this.localidad = localidad;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "localidad", nullable = false)
	public Localidad getLocalidad() {
		return this.localidad;
	}

	public void setLocalidad(Localidad localidad) {
		this.localidad = localidad;
	}

	@Column(name = "localizacion", nullable = false, length = 100)
	public String getLocalizacion() {
		return this.localizacion;
	}

	public void setLocalizacion(String localizacion) {
		this.localizacion = localizacion;
	}

	@Column(name = "formacion", nullable = false, length = 200)
	public String getFormacion() {
		return this.formacion;
	}

	public void setFormacion(String formacion) {
		this.formacion = formacion;
	}

	@Column(name = "telefono", nullable = false, length = 10)
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}

	@Column(name = "sexo", length = 20)
	public String getSexo() {
		return this.sexo;
	}

	public void setSexo(String sexo) {
		this.sexo = sexo;
	}

	@Column(name = "estado_civil", length = 50)
	public String getEstadoCivil() {
		return this.estadoCivil;
	}

	public void setEstadoCivil(String estadoCivil) {
		this.estadoCivil = estadoCivil;
	}

	@Column(name = "descripcion", length = 200)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}
	
	@Column(name = "validez", nullable = false)
	public boolean getValidez() {
		return this.validez;
	}

	public void setValidez(boolean validez) {
		this.validez = validez;
	}
	
	@Column(name = "fecha_registro", nullable = false)
	public Date getFechaRegistro() {
		return this.fechaRegistro;
	}

	public void setFechaRegistro(Date fechaRegistro) {
		this.fechaRegistro = fechaRegistro;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "profesional")
	public Set<Visita> getVisitas() {
		return this.visitas;
	}

	public void setVisitas(Set<Visita> visitas) {
		this.visitas = visitas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "profesional")
	public Set<Certificado> getCertificados() {
		return this.certificados;
	}

	public void setCertificados(Set<Certificado> certificados) {
		this.certificados = certificados;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "profesional")
	public Set<Serie> getSeries() {
		return this.series;
	}

	public void setSeries(Set<Serie> series) {
		this.series = series;
	}
}
