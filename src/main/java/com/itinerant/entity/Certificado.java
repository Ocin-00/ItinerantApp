package com.itinerant.entity;
//Generated 1 ene 2023 17:14:25 by Hibernate Tools 4.3.6.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * Certificado generated by hbm2java
 */
@Entity
@NamedQueries({
	 @NamedQuery(name = "Certificado.findAll", query = "SELECT c FROM Certificado c ORDER BY c.anyo"),
	 @NamedQuery(name = "Certificado.findAllNotValid", query = "SELECT c FROM Certificado c WHERE c.validez is not true ORDER BY c.fechaRegistro"),
	 @NamedQuery(name = "Certificado.countAll", query = "SELECT count(*) FROM Certificado c"),
	 @NamedQuery(name = "Certificado.findAllByLogin", query = "SELECT c FROM Certificado c WHERE c.profesional.login = :login"),
	 @NamedQuery(name = "Certificado.findAllValidByLogin", query = "SELECT c FROM Certificado c WHERE c.profesional.login = :login AND c.validez is true"),
})
@Table(name = "certificado", catalog = "itinerant_db")
public class Certificado implements java.io.Serializable {

	private Integer idCertificado;
	private Profesional profesional;
	private String titulo;
	private String entidadEmisora;
	private int anyo;
	private boolean validez;
	private Date fechaRegistro;
	private String ruta;

	public Certificado() {
	}

	public Certificado(Profesional profesional, String titulo, String entidadEmisora, int anyo,
			boolean validez, Date fechaRegistro, String ruta) {
		this.idCertificado = idCertificado;
		this.profesional = profesional;
		this.titulo = titulo;
		this.entidadEmisora = entidadEmisora;
		this.anyo = anyo;
		this.validez = validez;
		this.fechaRegistro = fechaRegistro;
		this.ruta = ruta;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_certificado", unique = true, nullable = false, length = 45)
	public Integer getIdCertificado() {
		return this.idCertificado;
	}

	public void setIdCertificado(Integer idCertificado) {
		this.idCertificado = idCertificado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_profesional", nullable = false)
	public Profesional getProfesional() {
		return this.profesional;
	}

	public void setProfesional(Profesional profesional) {
		this.profesional = profesional;
	}

	@Column(name = "titulo", nullable = false, length = 50)
	public String getTitulo() {
		return this.titulo;
	}

	public void setTitulo(String titulo) {
		this.titulo = titulo;
	}

	@Column(name = "entidad_emisora", nullable = false, length = 50)
	public String getEntidadEmisora() {
		return this.entidadEmisora;
	}

	public void setEntidadEmisora(String entidadEmisora) {
		this.entidadEmisora = entidadEmisora;
	}

	@Column(name = "anyo", nullable = false)
	public int getAnyo() {
		return this.anyo;
	}

	public void setAnyo(int anyo) {
		this.anyo = anyo;
	}

	@Column(name = "validez", nullable = false)
	public boolean getValidez() {
		return this.validez;
	}

	public void setValidez(boolean validez) {
		this.validez = validez;
	}

	@Column(name = "fecha_registro", nullable = false)
	public Date getFechaRegistro() {
		return this.fechaRegistro;
	}

	public void setFechaRegistro(Date fechaRegistro) {
		this.fechaRegistro = fechaRegistro;
	}

	@Column(name = "ruta", nullable = false, length = 200)
	public String getRuta() {
		return this.ruta;
	}

	public void setRuta(String ruta) {
		this.ruta = ruta;
	}

}
