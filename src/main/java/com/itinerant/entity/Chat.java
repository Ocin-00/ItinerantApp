package com.itinerant.entity;
// Generated 22 dic 2022 13:04:01 by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Chat generated by hbm2java
 */
@Entity
@NamedQueries({
	 @NamedQuery(name = "Chat.findAllByLogin", query = "SELECT c FROM Chat c WHERE c.usuarioInternoByIdSender.login = :login"
	 												+ " OR c.usuarioInternoByIdRecipient.login = :login"),
	 @NamedQuery(name = "Chat.findAllBySenderAndRecipient", query = "SELECT c FROM Chat c WHERE (c.usuarioInternoByIdSender.login = :sender"
				+ " AND c.usuarioInternoByIdRecipient.login = :recipient) OR (c.usuarioInternoByIdRecipient.login = :sender"
				+ " AND c.usuarioInternoByIdSender.login = :recipient)")
})
@Table(name = "chat", catalog = "itinerant_db")
public class Chat implements java.io.Serializable {

	private Integer idChat;
	private UsuarioInterno usuarioInternoByIdRecipient;
	private UsuarioInterno usuarioInternoByIdSender;
	private Set<ChatMensaje> chatMensajes = new HashSet<ChatMensaje>(0);
	private boolean nuevo;

	public Chat() {
	}

	public Chat(UsuarioInterno usuarioInternoByIdRecipient, UsuarioInterno usuarioInternoByIdSender) {
		this.usuarioInternoByIdRecipient = usuarioInternoByIdRecipient;
		this.usuarioInternoByIdSender = usuarioInternoByIdSender;
		this.nuevo = true;
	}

	public Chat(UsuarioInterno usuarioInternoByIdRecipient, UsuarioInterno usuarioInternoByIdSender, Set<ChatMensaje> chatMensajes) {
		this.usuarioInternoByIdRecipient = usuarioInternoByIdRecipient;
		this.usuarioInternoByIdSender = usuarioInternoByIdSender;
		this.chatMensajes = chatMensajes;
		this.nuevo = true;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_chat", unique = true, nullable = false)
	public Integer getIdChat() {
		return this.idChat;
	}

	public void setIdChat(Integer idChat) {
		this.idChat = idChat;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_recipient", nullable = false)
	public UsuarioInterno getUsuarioInternoByIdRecipient() {
		return this.usuarioInternoByIdRecipient;
	}

	public void setUsuarioInternoByIdRecipient(UsuarioInterno usuarioInternoByIdRecipient) {
		this.usuarioInternoByIdRecipient = usuarioInternoByIdRecipient;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_sender", nullable = false)
	public UsuarioInterno getUsuarioInternoByIdSender() {
		return this.usuarioInternoByIdSender;
	}

	public void setUsuarioInternoByIdSender(UsuarioInterno usuarioInternoByIdSender) {
		this.usuarioInternoByIdSender = usuarioInternoByIdSender;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chat")
	public Set<ChatMensaje> getChatMensajes() {
		return this.chatMensajes;
	}

	public void setChatMensajes(Set<ChatMensaje> chatMensajes) {
		this.chatMensajes = chatMensajes;
	}

	@Column(name = "nuevo", nullable = false, length = 100)
	public boolean getNuevo() {
		return this.nuevo;
	}

	public void setNuevo(boolean nuevo) {
		this.nuevo = nuevo;
	}
}
