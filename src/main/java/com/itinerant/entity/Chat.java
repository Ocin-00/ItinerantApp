package com.itinerant.entity;
// Generated 5 jul 2022 14:47:27 by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Chat generated by hbm2java
 */
@Entity
@NamedQueries({
	 @NamedQuery(name = "Chat.findAll", query = "SELECT l FROM Localidad l"),
	 @NamedQuery(name = "Chat.countAll", query = "SELECT count(*) FROM Localidad l")
})
@Table(name = "chat", catalog = "itinerant_db")
public class Chat implements java.io.Serializable {

	private Integer idChat;
	private UsuarioInterno usuarioInternoByUsuarioFuente;
	private UsuarioInterno usuarioInternoByUsuarioDestino;
	private Set<ChatMensaje> chatMensajes = new HashSet<ChatMensaje>(0);

	public Chat() {
	}

	public Chat(UsuarioInterno usuarioInternoByUsuarioFuente, UsuarioInterno usuarioInternoByUsuarioDestino) {
		this.usuarioInternoByUsuarioFuente = usuarioInternoByUsuarioFuente;
		this.usuarioInternoByUsuarioDestino = usuarioInternoByUsuarioDestino;
	}

	public Chat(UsuarioInterno usuarioInternoByUsuarioFuente, UsuarioInterno usuarioInternoByUsuarioDestino,
			Set<ChatMensaje> chatMensajes) {
		this.usuarioInternoByUsuarioFuente = usuarioInternoByUsuarioFuente;
		this.usuarioInternoByUsuarioDestino = usuarioInternoByUsuarioDestino;
		this.chatMensajes = chatMensajes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_chat", unique = true, nullable = false)
	public Integer getIdChat() {
		return this.idChat;
	}

	public void setIdChat(Integer idChat) {
		this.idChat = idChat;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usuario_fuente", nullable = false)
	public UsuarioInterno getUsuarioInternoByUsuarioFuente() {
		return this.usuarioInternoByUsuarioFuente;
	}

	public void setUsuarioInternoByUsuarioFuente(UsuarioInterno usuarioInternoByUsuarioFuente) {
		this.usuarioInternoByUsuarioFuente = usuarioInternoByUsuarioFuente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usuario_destino", nullable = false)
	public UsuarioInterno getUsuarioInternoByUsuarioDestino() {
		return this.usuarioInternoByUsuarioDestino;
	}

	public void setUsuarioInternoByUsuarioDestino(UsuarioInterno usuarioInternoByUsuarioDestino) {
		this.usuarioInternoByUsuarioDestino = usuarioInternoByUsuarioDestino;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chat")
	public Set<ChatMensaje> getChatMensajes() {
		return this.chatMensajes;
	}

	public void setChatMensajes(Set<ChatMensaje> chatMensajes) {
		this.chatMensajes = chatMensajes;
	}

}
